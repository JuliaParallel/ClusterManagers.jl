name: CI
on:
  pull_request:
  push:
    branches:
      - master
concurrency:
  # Skip intermediate builds: all builds except for builds on the `master` branch
  # Cancel intermediate builds: only pull request builds
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/master' || github.run_number }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
permissions:
  contents: read
jobs:
  test-slurm:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        julia_version:
          - '1.2' # Oldest version of Julia that this package supports (according to Project.toml)
          - '1.6' # Previous LTS
          - '1.10' # Current LTS
          - '1' # automatically expands to the latest stable 1.x release of Julia
          - "nightly"
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - uses: julia-actions/setup-julia@v2
      with:
        version: ${{ matrix.julia_version }}
    - name: Print Docker version
      run: |
        docker --version
        docker version
    # This next bit of code is taken from:
    # https://github.com/kleinhenz/SlurmClusterManager.jl
    # Original author: Joseph Kleinhenz
    # License: MIT
    - name: Setup Slurm inside Docker
      run: |
        docker version
        docker compose version
        docker build --build-arg JULIA_VERSION=${{matrix.version}} -t slurm-cluster-julia -f ci/Dockerfile .
        docker compose -f ci/docker-compose.yml up -d
        docker ps
    - name: Instantiate package
      run: docker exec -t slurmctld /julia/bin/julia --project=/SlurmTools -e 'using Pkg; Pkg.instantiate(verbose=true); Pkg.build(verbose=true)'
      continue-on-error: true # TODO: Delete this line
    - name: Run tests without allocation
      run: docker exec -t slurmctld /julia/bin/julia --project=/SlurmTools -e 'using Pkg; Pkg.test(test_args=["slurm"])'
      continue-on-error: true # TODO: Delete this line
    - name: Run tests inside allocation
      run: docker exec -t slurmctld salloc -t 00:10:00 -n 2 /julia/bin/julia --project=/SlurmTools -e 'using Pkg; Pkg.test(test_args=["slurm"])'
      continue-on-error: true # TODO: Delete this line
    - name: Run tests inside sbatch
      continue-on-error: true # TODO: Delete this line
      run: |
         cat << EOF > sbatch.sh
         #!/bin/bash
         #SBATCH --ntasks=2
         #SBATCH --time=00:10:00
         /julia/bin/julia --project=/SlurmTools -e 'using Pkg; Pkg.test(test_args=["slurm"])'
         EOF
         docker exec slurm-$SLURM sbatch --wait --output=/SlurmTools/output --error=/SlurmTools/output /SlurmTools/sbatch.sh
         cat output
